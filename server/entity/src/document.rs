//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.1

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "document")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub source: Option<String>,
    pub created_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::document_version::Entity")]
    DocumentVersion,
    #[sea_orm(has_many = "super::embedding::Entity")]
    Embedding,
}

impl Related<super::document_version::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DocumentVersion.def()
    }
}

impl Related<super::embedding::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Embedding.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
