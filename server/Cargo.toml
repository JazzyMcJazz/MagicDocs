[package]
name = "magicdocs"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
migration = { path = "./migration", optional = true }
entity = { path = "./entity", optional = true }
axum = { version = "0.7.5", features = ["macros"], optional = true }
axum-extra = { version = "0.9.3", features = ["cookie"], optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.5.2", features = ["trace", "fs"], optional = true }
console_error_panic_hook = "0.1"
leptos = { version = "0.6" }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6" }
leptos_router = { version = "0.6" }
tokio = { version = "1.37.0", features = ["sync", "rt-multi-thread"], optional = true }
wasm-bindgen = "=0.2.92"
tracing = { version = "0.1.40", optional = true }
dotenvy = { version = "0.15.7", optional = true }
env_logger = { version = "0.11.3", optional = true }
serde = { version = "1.0.198", optional = true }
serde_json = { version = "1.0.116", optional = true }
futures-util = { version = "0.3.30" }
lru = { version = "0.12.3", optional = true }
jsonwebtoken = { version = "9.3.0", optional = true }
async-stream = { version = "0.3.5", optional = true }
anyhow = { version = "1.0.82", optional = true }
comrak = { version = "0.23.0", optional = true }
scraper = { version = "0.19.0", optional = true }
regex = { version = "1.10.4", optional = true }
url = { version = "2.5.0", optional = true }
time = { version = "0.3.36", optional = true }
http = { version = "1.1.0" }
html2md = { version = "0.2.14", optional = true }
text-splitter = { version = "0.13.1", features = ["markdown", "tiktoken-rs"], optional = true }
tiktoken-rs = { version = "0.5.8", optional = true }
reqwest = { version = "0.12.3", features = ["json"] }
once_cell = { version = "1.19.0", optional = true }
thiserror = "1.0.61"
leptos-use = "0.10.10"
uuid = { version = "1.8.0", optional = true }

[dev-dependencies]
mockito = "1.4.0"
rstest = "0.19.0"

[profile.release]
strip = true
lto = true

[features]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "dep:serde",
    "dep:comrak",
    "dep:serde_json",
    "uuid/v4",
]
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
    "dep:migration",
    "dep:entity",
    "dep:axum",
    "dep:axum",
    "dep:axum-extra",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:tracing",
    "dep:dotenvy",
    "dep:env_logger",
    "dep:lru",
    "dep:jsonwebtoken",
    "dep:async-stream",
    "dep:anyhow",
    "dep:scraper",
    "dep:url",
    "dep:html2md",
    "dep:text-splitter",
    "dep:tiktoken-rs",
    "dep:once_cell",
    "dep:regex",
    "dep:time",
    "dep:serde",
    "dep:serde_json",
    "dep:comrak",
    "uuid/v4",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "magicdocs"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"

[lints.clippy]
empty_docs = "allow"
redundant_closure = "allow"